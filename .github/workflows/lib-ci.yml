name: Lib - Build, Bump and Push (GitHub Registry)
on: 
  workflow_call:
    secrets:
      github-token:
        description: 'The GitHub PAT token to perform checkout and publish.'
        required: true
    inputs:
      project-name:
        description: 'The name of the project to build. Must match the directory name.'
        required: true
        type: string
      base-path:
        description: 'The working directory base path with a trailing forward-slash'     
        required: false
        default: '/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/'
        type: string
      source-path:
        description: > 
            The source path relative to the base path with a trailing forward-slash.
            For example, if the project folder is in a subfolder called src, then this value needs to be set to src/
            If there is no subfolder, just leave it empty.
        required: false
        default: ''
        type: string
      prerelease-versions-kept:
        description: 'The number of pre-release versions kept in the GitHub registry.'
        required: false
        type: number
        default: 10
      version-bump-level:
        description: 'The version component to bump after publishing.'
        required: false
        default: ${{ contains(github.event.head_commit.message, '[PATCH]') && 'patch' || contains(github.event.head_commit.message, '[MINOR]') && 'minor' || contains(github.event.head_commit.message, '[MAJOR]') && 'major' || 'prerelease' }}
        type: string
jobs:
  lib-ci:
    runs-on: ubuntu-latest
    steps:
    - name: 🥓 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          5.0.x
          6.0.x
    - name: 🧑‍💻 Checkout codebase
      uses: actions/checkout@v3.1.0
      with:
        token: ${{ secrets.github-token }}
        ref: ${{ github.ref_name }}
    - name: 🐝 Bump version
      uses: unosquare/bump-nuget-version@master 
      with:
        level: ${{ inputs.version-bump-level }}
        csproj: '${{ inputs.base-path }}${{ inputs.source-path }}${{ inputs.project-name }}/${{ inputs.project-name }}.csproj'
    - name: 🏗 Build and pack nuget
      run: |
        dotnet pack '${{ inputs.base-path }}${{ inputs.source-path }}${{ inputs.project-name }}/${{ inputs.project-name }}.csproj' --configuration Release
    - name: 📌 Commit
      uses: EndBug/add-and-commit@v9
      with:
        message: '[skip ci]'
    - name: 🍱 Publish nuget
      uses: unosquare/publish-nuget-package@master
      with:
        access-token: ${{ secrets.github-token }}
        path: '${{ inputs.base-path }}${{ inputs.source-path }}${{ inputs.project-name }}/bin/Release'
    - name: 🌿 Clean up stale packages
      uses: actions/delete-package-versions@v3
      with: 
        package-name: ${{ inputs.project-name }}
        min-versions-to-keep: ${{ inputs.prerelease-versions-kept }}
        delete-only-pre-release-versions: 'true'
